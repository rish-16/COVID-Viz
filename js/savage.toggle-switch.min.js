/*
 * Copyright (C) 2015 Jose F. Maldonado
 * This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
"object" != typeof SaVaGe && (SaVaGe = {}), SaVaGe.ToggleSwitch = function(t) {
    "object" != typeof t && (t = {}), "string" != typeof t.container && (t.container = "body"), "boolean" != typeof t.value && (t.value = !1), "number" != typeof t.height && (t.height = 50), ("number" != typeof t.width || t.width < t.height) && (t.width = parseInt(1.6 * t.height, 10)), "number" != typeof t.radius && (t.radius = t.height / 2 - 4), "number" != typeof t.duration && (t.duration = 250), "object" != typeof t.colors && (t.colors = {}), void 0 === t.colors.backLeft && (t.colors.backLeft = "lightgray"), void 0 === t.colors.foreLeft && (t.colors.foreLeft = "white"), void 0 === t.colors.backRight && (t.colors.backRight = "#88f"), void 0 === t.colors.foreRight && (t.colors.foreRight = "white");
    var e = t.value,
        o = t.height,
        r = t.width,
        i = 0,
        h = 0;
    2 * t.radius > t.height && (o = 2 * t.radius, r = parseInt(t.width + (2 * t.radius - t.height), 10), i = parseInt((r - t.width) / 2, 10), h = parseInt((r - t.width) / 2, 10));
    var a = d3.select(t.container).append("svg").attr("width", r).attr("height", o).style("cursor", "pointer"),
        c = a.append("rect").attr("x", i).attr("y", h).attr("rx", t.height / 2).attr("ry", t.height / 2).style("fill", e ? t.colors.backRight : t.colors.backLeft).attr("width", t.width).attr("height", t.height),
        n = a.append("circle").attr("cx", (e ? t.width - t.height / 2 : t.height / 2) + i).attr("cy", t.height / 2 + h).attr("r", t.radius).style("fill", e ? t.colors.foreRight : t.colors.foreLeft),
        l = function(o) {
            e = o, n.transition().duration(t.duration).attr("cx", (e ? t.width - t.height / 2 : t.height / 2) + i).style("fill", e ? t.colors.foreRight : t.colors.foreLeft), c.transition().duration(t.duration).style("fill", e ? t.colors.backRight : t.colors.backLeft)
        },
        s = {
            svg: a,
            getValue: function() {
                return e
            },
            setValue: l,
            remove: function() {
                a.remove()
            }
        };
    return a.on("click", function() {
        l(!e), "function" == typeof t.onChange && t.onChange(s)
    }), s
};